var Scrollery=function(){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */function t(t,e,n,i){return new(n||(n=Promise))((function(r,o){function s(t){try{l(i.next(t))}catch(t){o(t)}}function a(t){try{l(i.throw(t))}catch(t){o(t)}}function l(t){var e;t.done?r(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}l((i=i.apply(t,e||[])).next())}))}class e{constructor(t,e){this.handlers={},this.pagination_number=2,this.events=["load","load.json","last","insert"],this.status="idle",this.is_last_page=!1,this.config=e,this.container=t}toggleSpinner(){if(!1===this.config.showSpinner)return;window.document.querySelector(".scrollery-spinner-wrapper").style.opacity="loading"===this.status?"1":"0"}fetchNextPageContent(){let t;if("string"==typeof this.config.path){const e=new URLSearchParams(window.location.search);e.set(this.config.path,this.pagination_number.toString()),t=window.location.origin+window.location.pathname+e.toString()}else t=this.config.path(this.pagination_number);return fetch(t,this.config.fetchOptions).then((t=>{if(200!==t.status)throw this.is_last_page=!0,this.trigger("last"),new Error("Error fetching content");return"json"===this.config.responseType?t.json():t.text()}))}parseHtmlText(t,e){return(new window.DOMParser).parseFromString(t,"text/html").querySelectorAll(e)}insertContentElement(t){const e=this.container.querySelector(".scrollery-spinner-wrapper");"string"==typeof t?null==e||e.insertAdjacentHTML("beforebegin",t):"object"==typeof t&&null!==t&&t.forEach((t=>{null==e||e.insertAdjacentElement("beforebegin",t)})),this.trigger("insert")}loadNextPage(){return t(this,void 0,void 0,(function*(){if(!this.is_last_page){this.status="loading",this.toggleSpinner();try{const t=yield this.fetchNextPageContent();if(this.pagination_number++,this.trigger("load"),"string"==typeof t){const e=this.parseHtmlText(t,this.config.content);this.insertContentElement(e)}else this.trigger("load.json",t)}catch(t){console.error(t)}finally{this.status="idle",this.toggleSpinner()}}}))}on(t,e){if(!this.events.includes(t))throw new Error(`${t} is not a possible Scrollery event`);this.handlers[t]=e}off(t){if(!Object.prototype.hasOwnProperty.call(this.handlers,t))throw new Error(`No handler exists for '${t}' event`);delete this.handlers[t]}trigger(t,e){var n,i,r,o;"load.json"===t?null===(i=(n=this.handlers)["load.json"])||void 0===i||i.call(n,e):null===(o=(r=this.handlers)[t])||void 0===o||o.call(r)}}class n{static createObserver(){var t;const{threshold:e,root:n,rootMargin:i}=this.config;new IntersectionObserver(((t,e)=>{t.forEach((t=>{t.isIntersecting&&this.scrollery.loadNextPage()}))}),{threshold:e,root:n,rootMargin:i}).observe(null===(t=this.container)||void 0===t?void 0:t.lastElementChild)}static addLoadingElement(){var t;const e=window.document.createElement("div");e.classList.add("scrollery-spinner-wrapper"),e.innerHTML='<svg width="120" height="30" viewBox="0 0 120 30" xmlns="http://www.w3.org/2000/svg" fill="#000">    <circle cx="15" cy="15" r="15">        <animate attributeName="r" from="15" to="15" begin="0s" dur="0.8s" values="15;9;15" calcMode="linear" repeatCount="indefinite"/> <animate attributeName="fill-opacity" from="1" to="1" begin="0s" dur="0.8s" values="1;.5;1" calcMode="linear" repeatCount="indefinite"/> </circle> <circle cx="60" cy="15" r="9" fill-opacity="0.3">        <animate attributeName="r" from="9" to="9" begin="0s" dur="0.8s" values="9;15;9" calcMode="linear" repeatCount="indefinite"/> <animate attributeName="fill-opacity" from="0.5" to="0.5" begin="0s" dur="0.8s" values=".5;1;.5" calcMode="linear" repeatCount="indefinite"/> </circle> <circle cx="105" cy="15" r="15">        <animate attributeName="r" from="15" to="15" begin="0s" dur="0.8s" values="15;9;15" calcMode="linear" repeatCount="indefinite"/> <animate attributeName="fill-opacity" from="1" to="1" begin="0s" dur="0.8s" values="1;.5;1" calcMode="linear" repeatCount="indefinite"/> </circle> </svg>',e.style.opacity="0",null===(t=this.container)||void 0===t||t.insertAdjacentElement("beforeend",e)}static create(t,n){if(!Object.prototype.hasOwnProperty.call(n,"path")||!Object.prototype.hasOwnProperty.call(n,"content"))throw new Error("Path or content missing in config");if("string"==typeof t){if(this.container=window.document.querySelector(t),null===this.container)throw new Error("Creating Scrollery instance failed. Container element does not exist")}else this.container=t;this.config=Object.assign(Object.assign({},this.config),n);const i=new e(this.container,this.config);return this.scrollery=i,this.addLoadingElement(),this.createObserver(),i}}return n.config={path:"",content:"",threshold:0,rootMargin:"200px",root:null,fetchOptions:{},responseType:"text",showSpinner:!1},n}();
